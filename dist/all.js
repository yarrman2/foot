function getAiAngle(d){for(var e=[],f=Math.floor(194+d.bradius),h=Math.floor(d.height-(194+d.bradius)),j=f;j<=h;j++)e[j-f]=j;var m=[];d.traectories=[];for(var j=0;j<e.length;j++)m.push(function(B){var C=d.leftLine.start.x,D=d.ball.x,E=d.ball.y,F=d.bradius,G=d.radius,H=F+G;console.log('ai');var I=[],J=continueLine(C,B,D,E,0);I.push([{x:C,y:B,x1:D,y1:E,x2:J.x,y2:J.y,direction:0}]);var K=d.ty,L=d.by,M=function(){var Q=B-K,S=C+Q*(D-C)/(Q+(E-K)),T=Phaser.Math.angleBetween(D,E,S,K),U=tanc(S,D,K,E),V=H*Math.sin(T),W=H*Math.cos(T);return{x:C,y:B,x1:S,y1:K,x2:D,y2:E,direction:1}}();J=continueLine(M.x1,M.y1,M.x2,M.y2,0),I.push([{x:M.x,y:M.y,x1:M.x1,y1:M.y1},{x:M.x1,y:M.y1,x1:D,y1:E,x2:J.x,y2:J.y,direction:2}]);var M=function(){var Q=L-B,S=C+Q*(D-C)/(Q+(L-E)),T=Phaser.Math.angleBetween(D,E,S,K),U=tanc(S,D,K,E),V=H*Math.sin(T),W=H*Math.cos(T);return{x:C,y:B,x1:S,y1:L,x2:D,y2:E}}();J=continueLine(M.x1,M.y1,M.x2,M.y2,0),I.push([{x:M.x,y:M.y,x1:M.x1,y1:M.y1},{x:M.x1,y:M.y1,x1:D,y1:E,x2:J.x,y2:J.y}]);var N=[];I.forEach(function(P){var R=!0;P.forEach(function(W){var W=findNormal({x:W.x,y:W.y,x1:W.x1,y1:W.y1,curang:toGrad(Phaser.Math.angleBetween(W.x,W.y,W.x1,W.y1))},-1,F);0<W.newtracks.length&&(R=!1)}),P.forEach(function(W){R&&d.traectories.push(new Phaser.Line(W.x,W.y,W.x1,W.y1))});var S=P[P.length-1],T=S.x2,U=S.y2,V=d.redGroup.children.map(function(W){var Y=180,Z=new Phaser.Point(T,U),$=new Phaser.Point(W.x,W.y);Y=Phaser.Math.angleBetweenPoints(Z,$);var _=findNormal({x:W.x,y:W.y,x1:T,y1:U,curang:toGrad(Y)},W.idx,G),aa=!1;return 0==_.newtracks.length&&infield(T,U)&&(console.log(Z,$),d.traectories.push(new Phaser.Line(W.x,W.y,T,U)),aa=!0),{ang:Y,x:W.x,y:W.y,nearest:Math.abs(D-W.x),direction:S.direction,id:W.id,isCan:aa,isCanTr:R}});N=N.concat(V)}),N=N.filter(function(P){return 0!=P.ang});var O=!1;return N.some(function(P){return P.isCan&&P.isCanTr})&&(O=!0,N=N.filter(function(P){return P.isCan&&P.isCanTr})),anglse=N.map(function(P){P.isCan=O}),N}(e[j]));var o=[];m.forEach(function(B){B.forEach(function(C){o=o.concat(C)})}),m=o;var p=m.some(function(B){return B.isCan});p&&(m=m.filter(function(B){return B.isCan}));var q=d.angleSectors.map(function(B){return toRad(B)});console.log(m),m=splitArray(m,q,'ang'),console.log(m),d.firstPanch&&(m=m.filter(function(B){return 1==B.id||2==B.id}));var u=[],v=m.filter(function(B){return 0==B.direction})[0];v&&u.push(v);var w=m.filter(function(B){return 1==B.direction})[0];w&&u.push(w);var z=m.filter(function(B){return 2==B.direction})[0];z&&u.push(z);var A=u[Math.floor(Math.random()*u.length)];return A.angle=A.ang-Math.PI/2,A}function splitArray(d,e,f){function h(o,p){return o.nearest-p.nearest}var j=Array(e.length);d.forEach(o=>{var p=-1;e.forEach(q=>{Math.abs(o[f])>q&&++p}),j[p]||(j[p]=[]),j[p].push(o)}),console.log(j),j=j.map(o=>o.sort(h));var m=[];return j.forEach(o=>{m=m.concat(o)}),m}function findNormal(d,e,f){game.ids||(game.ids=[]);var h=game.radius+f,j=game.group.filter(u=>{return-1===e||u.idx!=e&&-1==game.ids.indexOf(u.idx)}),m=[],o=[];j.forEach(u=>{var v=tan(d.curang),w;if(0==v)var z=u.x,A=d.y,B=0,C=d.y;else{w=atan(v)-90;var B=tan(w),D=d.y-v*d.x,C=u.y-B*u.x,z=(C-D)/(v-B),A=B*z+C}var E=getLength(u.x,u.y,z,A);if(inrange(z,d.x,d.x1)&&E<h){m.push(new Phaser.Line(u.x,u.y,z,A));var F=Math.sqrt(h**2-E**2),G=sin(atan(v))*F,H=cos(atan(v))*F;if(z<u.x)var I=z+H;else var I=z-H;if(A<u.y)var J=A+G;else var J=A-G;var K=new Phaser.Line(u.x,u.y,I,J),L=tanc(u.x,I,u.y,J),M=atan(L);if(90<d.curang?M=180+M:-90>d.curang&&(M=-180-M),d.curang>M)var N=M+90;else var N=M-90;o.push({x:u.x,y:u.y,x1:I,y1:J,len:getLength(u.x,u.y,I,J),tn:L,ang:M,vec:K,ang2:N})}});var p=o.reduce((u,v)=>{if(-1==u)return v.len;return v.len<u?v.len:u},-1),q=o.filter(u=>u.len==p);return{newtracks:q}}function continueLine(d,e,f,h,j){j==void 0&&(j=0);var m=Phaser.Math.angleBetween(d,e,f,h),o=game.bradius+game.radius;o-=Phaser.Math.linear(0,j,Math.random());var p=o*Math.sin(m),q=o*Math.cos(m);return{x:f+q,y:h+p}}function infield(d,e){var f=game.radius;return game.lx+f<=d&&d<=game.rx-f&&game.tx+f<=e&&e<=game.by-f}